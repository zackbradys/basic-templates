kubectl apply -f - << EOF
### keycloak
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak-system
  labels:
    app: keycloak
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccount: keycloak-kubeping-service-account
      serviceAccountName: keycloak-kubeping-service-account
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak
        args: ["--verbose", "start"]
        env:
        - name: KC_HOSTNAME
          value: keycloak.ranchers.io
        - name: KEYCLOAK_URL
          value: "keycloak.ranchers.io"
        - name: KEYCLOAK_HOST
          value: "keycloak.ranchers.io"
        - name: KEYCLOAK_HOSTNAME
          value: "keycloak.ranchers.io"
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-credentials
              key: KEYCLOAK_ADMIN
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-credentials
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: kubernetes.KUBE_PING
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: CACHE_OWNERS_COUNT
          value: "3"
        - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
          value: "3"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: keycloak-system
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: infinispan
    port: 7800
    targetPort: 7800
    protocol: TCP
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: keycloak-ingress
  name: keycloak-ingress
  namespace: keycloak-system
spec:
  rules:
  - host: keycloak.ranchers.io
    http:
      paths:
      - backend:
          service:
            name: keycloak
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - keycloak.ranchers.io
    secretName: tls-certs
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
  namespace: keycloak-system
type: Opaque
stringData:
  KEYCLOAK_ADMIN: admin
  KEYCLOAK_ADMIN_PASSWORD: Pa22word
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-kubeping-service-account
  namespace: keycloak-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keycloak-kubeping-pod-reader
  namespace: keycloak-system
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keycloak-kubeping-api-access
  namespace: keycloak-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keycloak-kubeping-pod-reader
  namespace: keycloak-system
subjects:
- kind: ServiceAccount
  name: keycloak-kubeping-service-account
  namespace: keycloak-system
---
apiVersion: ui.cattle.io/v1
kind: NavLink
metadata:
  name: keycloak
spec:
  label: Keycloak
  target: _blank
  description: Keycloak Authentication
  group: Keycloak Authentication
  label: Keycloak
  sideLabel: KEYCLOAK
  toURL: https://keycloak.ranchers.io
EOF