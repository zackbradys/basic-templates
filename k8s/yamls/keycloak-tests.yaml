### postgresql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: keycloak-system
spec:
  serviceName: postgresql-service
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgresql-credentials
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-credentials
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: keycloak-system
spec:
  selector:
    app: postgresql
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-credentials
  namespace: keycloak-system
type: Opaque
stringData:
  POSTGRES_DB: keycloak
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: Pa22word
### keycloak
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak-system
  labels:
    app: keycloak
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccount: keycloak-kubeping-service-account
      serviceAccountName: keycloak-kubeping-service-account
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak
        readinessProbe:
          exec:
            command:
            - sleep
            - "60"
        args: ["--verbose", "start"]
        env:
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL
          value: jdbc:postgresql://postgresql-service:5432/keycloak
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgresql-credentials
              key: POSTGRES_DB
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgresql-credentials
              key: POSTGRES_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-credentials
              key: POSTGRES_PASSWORD
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-credentials
              key: KEYCLOAK_ADMIN
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-credentials
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: jgroups.dns.query
          value: keycloak-headless-service.keycloak-system.svc.cluster.local
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: dns.DNS_PING
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: dns_query=keycloak-headless-service.keycloak-system.svc.cluster.local
        - name: JDBC_PARAMS
          value: connectTimeout=30000
        - name: JAVA_OPTS
          value: -Djboss.as.management.blocking.timeout=30000
        - name: CACHE_OWNERS_COUNT
          value: "3"
        - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
          value: "3"
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HOSTNAME
          value: keycloak.ranchers.io
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: http-management
          containerPort: 9990
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: keycloak-system
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: infinispan
    port: 7800
    targetPort: 7800
    protocol: TCP
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-headless-service
  namespace: keycloak-system
spec:
  clusterIP: None
  selector:
    app: keycloak
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: keycloak-ingress
  name: keycloak-ingress
  namespace: keycloak-system
spec:
  rules:
  - host: keycloak.ranchers.io
    http:
      paths:
      - backend:
          service:
            name: keycloak
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - keycloak.ranchers.io
    secretName: tls-certs
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
  namespace: keycloak-system
type: Opaque
stringData:
  KEYCLOAK_ADMIN: admin
  KEYCLOAK_ADMIN_PASSWORD: Pa22word
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-kubeping-service-account
  namespace: keycloak-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keycloak-kubeping-pod-reader
  namespace: keycloak-system
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keycloak-kubeping-api-access
  namespace: keycloak-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keycloak-kubeping-pod-reader
subjects:
- kind: ServiceAccount
  name: keycloak-kubeping-service-account
  namespace: keycloak-system
---
apiVersion: ui.cattle.io/v1
kind: NavLink
metadata:
  name: keycloak
spec:
  label: Keycloak
  target: _blank
  description: Keycloak Authentication
  group: Keycloak Authentication
  label: Keycloak
  sideLabel: KEYCLOAK
  toURL: https://keycloak.ranchers.io
EOF